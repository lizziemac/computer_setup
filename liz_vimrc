" automatically load new plugins
execute pathogen#infect()
syntax on
filetype plugin indent on

" Make Vim more useful
set nocompatible
" Ask to confirm if leaving file
set confirm
" Use the OS clipboard by default (on versions compiled with `+clipboard`)
" Set color scheme!
colorscheme elflord

set clipboard=unnamed
" Enhance command-line completion
set wildmenu
" Allow cursor keys in insert mode
set esckeys
" Allow backspace in insert mode
set backspace=indent,eol,start
" Optimize for fast terminal connections
set ttyfast
" Add the g flag to search/replace by default
set gdefault
" Use UTF-8 without BOM
set encoding=utf-8 nobomb
" Change mapleader
let mapleader=","
" Donâ€™t add empty newlines at the end of files
set binary
set noeol
" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
" Support all three fileformats, in this order
set fileformats=unix,dos,mac
"Turn on autmatic indentation, and set it
set autoindent
set smartindent
set cindent
" make sure vim history works
set viminfo+=!
" open and maximize the split below
map <C-J> <C-W>j<C-W>_
" open and maximize the split above
map <C-K> <C-W>k<C-W>_
set wmh=0 " reduces splits to a single line
" Enable per-directory .vimrc files and disable unsafe commands in them
set exrc
set secure
" Enable syntax highlighting
syntax on
" Make tabs as wide as two spaces
set expandtab
set shiftwidth=4
set softtabstop=4
" Enable line numbers
set number
" Show invisible characters
set lcs=tab:▸\ ,trail:·,nbsp:_
set list
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line
set laststatus=2
" Respect modeline in files
set modeline
set modelines=4
" Enable mouse in nav mode
set mouse=nv
" Disable error bells
set noerrorbells
" Donâ€™t reset cursor to start of line when moving around.
set nostartofline
" Show the cursor position
set ruler
" Donâ€™t show the intro message when starting Vim
set shortmess=atI
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the (partial) command as it's being typed
set showcmd
" Start scrolling three lines before the horizontal window border
set scrolloff=3
" Unfold everything
set foldlevel=99


let g:syntastic_full_redraws=0

let g:airline#extensions#hunks#enabled=1
let g:airline_theme='badcat'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline_powerline_fonts = 1


" Strip trailing whitespace (,ss)
function! AirlineInit()
        let g:airline_section_a = airline#section#create(['mode'])
        let g:airline_section_b = airline#section#create(['branch'])
        let g:airline_section_c = airline#section#create(['hunks'])
endfunction
autocmd VimEnter * call AirlineInit()

let g:airline_mode_map = {
      \ '__' : '-',
      \ 'n' : 'N',
      \ 'i' : 'I',
      \ 'R' : 'R',
      \ 'c' : 'C',
      \ 'v' : 'V',
      \ 'V' : 'V',
      \ 's' : 'S',
      \ 'S' : 'S',
      \ }

if !exists('g:airline_symbols')
      let g:airline_symbols = {}
  endif
  let g:airline_symbols.space = "\ua0"

set t_Co=256

" Strip trailing whitespace (,ss)
function! StripWhitespace()
        let save_cursor = getpos(".")
        let old_query = getreg('/')
        :%s/\s\+$//e
        call setpos('.', save_cursor)
        call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>

" Save a file as root (,W)
noremap <leader>W :w !sudo tee % > /dev/null<CR>

" Automatic commands
if has("autocmd")
        " Enable file type detection
        filetype on
        " Treat .json files as .js
        autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
endif
